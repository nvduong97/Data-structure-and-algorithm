// SVMC , detail: https://drive.google.com/file/d/1t9cOB0mO6gDCiJGihL7aWKSaitpgKTet/view?usp=sharing
#include<iostream>
#include<algorithm>
using namespace std;
/* Đề bài là: cho các tòa nhà, tìm xem có bao nhiêu tầng có thể nhìn được view 
khi đó nhìn bên trái và bên phải cách tối đa 2 nhà không bị lấp thì được coi là có view
1
10
3 5 2 4 9 0 6 4 0 6
= > 6
*/
int main() {
	int testCase, i, j, n, stt;
	cin >> testCase;
	for (stt = 1; stt <= testCase; stt++) {
		int kq = 0;
		cin >> n;
		int *a = new int[n + 10];
		a[0] = a[1] = a[n + 2] = a[n + 3] = 0;
		for (i = 2; i <= n + 1; i++) {
			cin >> a[i];
		}
		int b[5] = { 0 };
		for (i = 2; i <= n + 1; i++) {
			if (a[i] - a[i - 1] > 0 && a[i] - a[i - 2] > 0 && a[i] - a[i + 1] > 0 && a[i] - a[i + 2] > 0) {
				b[0] = a[i] - a[i - 1];
				b[1] = a[i] - a[i - 2];
				b[2] = a[i] - a[i + 1];
				b[3] = a[i] - a[i + 2];
				sort(b, b + 4);
				kq += b[0];
			}
		}
		cout << "#" << stt << " " << kq << endl;
	}
	system("pause");
	return 0;
}
