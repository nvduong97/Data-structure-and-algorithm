10
1238099084
16
4100112380990844
==============================================================
package OnTap;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

import javax.swing.text.AbstractDocument.LeafElement;

/*
 * 1238099084 => 1234
 * 4100112380990844 => 4123
 */
public class PassWord {
	static class stack {
		int top = -1;
		char items[] = new char[100];

		void push(char v) {
			items[top + 1] = v;
			top++;
		}

		char pop() {
			char element = items[top];
			top--;
			return element;
		}

		char peek() { // <=> equals
			char x = items[top];
			return x;
		}

		boolean isEmpty() {
			return (top == -1) ? true : false;
		}
	}

	public static void main(String[] args) {
		try {
			System.setIn(new FileInputStream("PassWord.txt"));
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int i, j, tc, n;
		Scanner sc = new Scanner(System.in);
		for (tc = 1; tc <= 2; tc++) {
			// char a[] = null;
			stack st = new stack();
			n = sc.nextInt();
			char s[] = new char[n];
			s = sc.next().toCharArray();
			// toCharArray() chuẩn hóa từ 1 xâu về mảng các kí tự
			int count = 0;
			for (i = n - 1; i >= 0; i--) {
				if (st.isEmpty()) {
					count = 1;
					st.push(s[i]);
				} else {
					char v = st.peek();
					if (v == s[i]) {
						count--;
						st.pop();
					} else {
						count++;
						st.push(s[i]);
					}
				}
			}
			System.out.print("#" + tc + " ");
			for (i = 0; i < count; i++) {
				System.out.print(st.pop());
			}
			System.out.println();
		}
	}

}
